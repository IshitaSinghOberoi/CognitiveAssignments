# -*- coding: utf-8 -*-
"""Ass3.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1007vJ4edV06zd2b0YaQVKy9ECqSd6iqg
"""

import pandas as pd

myDS={
    'Tid':[1,2,3,4,5,6,7,8,9,10],
    'Refund':['Yes','No','No','Yes','No','No','Yes','No','No','No'],
    'Marital Status':['Single','Married','Single','Married','Divorced','Married','Divorced','Single','Married','Single'],
    'Taxable Income':['125K','100K','70K','120K','95K','60K','220K','85K','75K','90K'],
    'Cheat':['No','No','No','No','Yes','No','No','Yes','No','Yes']
}
myVar=pd.DataFrame(myDS)
print(myVar)

print(myVar.loc[[0,4,7,8],:])

print(myVar.loc[3:8])

print(myVar.iloc[ 4:9,2:5 ] )

print(myVar.iloc[ :,1:4 ] )

data1 = pd.read_csv('/content/Iris.csv')
print(data1.head())

data1.drop(index=3)
data1.drop(columns=['SepalWidthCm'])

import pandas as pd
employees = {
    "Employee_ID" : [101,102,103,104,105],
    "Name" : ["Alice", "Bob", "Charlie", "Diana", "Edward"],
    "Department" : ["HR", "IT", "IT", "Marketing", "Sales"],
    "Age" : [29,34,41,28,38],
    "Salary" : [50000,70000,65000,55000,60000],
    "Years_of_Experience" : [4,8,10,3,12],
    "Joining_Date" : ["2020-03-15", "2017-07-19", "2013-06-01", "2021-02-10", "2010-11-25"],
    "Gender" : ["Female", "Male", "Male", "Female", "Male"],
    "Bonus" : [5000,7000,6000,4500,5000],
    "Rating" : [4.5,4,3.8,4.7,3.5]
}

data2 = pd.DataFrame(employees)
data2.to_csv('employees.csv', index=False)

data2.shape

data2.info()

data2.describe()

data2.head()

data2.tail(3)

average_salary = data2['Salary'].mean()
print("Average Salary:", average_salary)
total_bonus = data2['Bonus'].sum()
print("Total Bonus:", total_bonus)
youngest_age = data2['Age'].min()
print("Youngest Employee Age:", youngest_age)
highest_rating = data2['Rating'].max()
print("Highest Employee Rating:", highest_rating)

sorted = data2.sort_values(by='Salary', ascending=False)
print(sorted)

def categorize_rating(rating):
    if rating >= 4.5:
        return 'Excellent'
    elif rating >= 4.0:
        return 'Good'
    else:
        return 'Average'

data2['Rating_Category'] = data2['Rating'].apply(categorize_rating)
print(data2)

missing_values = data2.isnull().sum()
print(missing_values)

rename_data = data2.rename(columns = {'Employee_ID':'ID'})
print(rename_data)

data2.loc[(data2['Years_of_Experience']>5)]

data2.loc[(data2['Department']=='IT')]

def tax_red(salary):
  return (salary*0.1)

data2['Tax'] = data2['Salary'].apply(tax_red)
data2

data2.to_csv('modified_employee_data.csv', index=False)